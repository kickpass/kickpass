.\"
.\" Copyright (c) 2017 Paul Fariello <paul@fariello.eu>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd May 11, 2017
.Dt KP_INIT_WORKSPACE 3
.Os
.Sh NAME
.Nm kp_init_workspace
.Nd "create and initialize a kickpass workspace"
.Sh LIBRARY
.Lb libkickpass
.Sh SYNOPSIS
.In kickpass/kickpass.h
.Ft kp_error_t
.Fn kp_init_workspace "struct kp_ctx *ctx" "const char *subpath"
.Sh DESCRIPTION
Create and initialize a kickpass workspace.
.Pp
The
.Fn kp_init_workspace
function takes a pointer to an initialized
.Fa ctx
and a
.Fa subpath .
.Pp
The
.Fa subpath
can be either the empty string or any path. In the former case the root
workspace will be initialized. In the latter case the workspace will be
initialized in the given path in a pre-existing root workspace.
.Sh RETURN VALUES
Upon successful completion, the value
.Er KP_SUCCESS
is returned; otherwise any KP_* error is returned.
.Sh ERRORS
.Fn kp_init_workspace
can fail with the one of the following errors:
.Bl -tag -width Er
.It Bq Er KP_ERRNO
If standard error is specified in
.Er errno
variable.
.It Bq Er ENOMEM
Out of memory.
.It Bq Er EEXIST
File exists.
.El
.Sh SEE ALSO
.Xr kp_init 3 ,
.Xr kp_fini 3
.Sh AUTHORS
.Nm
is written by
.An Paul Fariello Aq Mt paul@fariello.eu .
